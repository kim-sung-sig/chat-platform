plugins {
	id 'java'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example.chat'
version = '0.0.1-SNAPSHOT'
description = 'chat-system-server'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

	// web, validation, websocket
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// database - JPA, Flyway, Postgres, H2
	runtimeOnly 'org.postgresql:postgresql'
	testRuntimeOnly 'com.h2database:h2'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// scheduling - batch, quartz
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.batch:spring-batch-test'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	// messaging - Kafka, RabbitMQ
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// swagger
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// testing
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}